model:
  base_learning_rate: 5.0e-5   # set to target_lr by starting main.py with '--scale_lr False'
  target: ldm.models.diffusion.ddpm.LatentDiffusion
  params:
    linear_start: 0.0015
    linear_end: 0.0155
    num_timesteps_cond: 1
    log_every_t: 200
    timesteps: 1000
    loss_type: l1
    first_stage_key: "image"
    cond_stage_key: "image"
    image_size: 32
    channels: 4
    cond_stage_trainable: False
    concat_mode: False
    scale_by_std: True
    monitor: 'val/loss_simple_ema'

    scheduler_config: # 10000 warmup steps
      target: ldm.lr_scheduler.LambdaLinearScheduler
      params:
        warm_up_steps: [10000]
        cycle_lengths: [10000000000000]
        f_start: [1.e-6]
        f_max: [1.]
        f_min: [ 1.]

    unet_config:
      target: ldm.modules.diffusionmodules.openaimodel.UNetModel
      params:
        image_size: 32  # Latent resolution (256 / f=8 downsampling = 32)
        in_channels: 64 # <-- CRITICAL: Must match z_channels from the autoencoder
        out_channels: 64 # Must also match z_channels
        model_channels: 256
        attention_resolutions: [ 4, 2, 1 ] # Corresponds to latent resolutions 32->16->8
        num_res_blocks: 2
        channel_mult: [ 1, 2, 4, 4 ]
        num_heads: 8
        use_spatial_transformer: true
        transformer_depth: 1
        context_dim: 768

    first_stage_config:
      target: ldm.models.autoencoder.AutoencoderKL
      # Add the path to your trained autoencoder checkpoint
      params:
        ckpt_path: "logs/2025-10-01T14-09-39_autoencoder_kl_8x8x64/checkpoints/epoch=000003.ckpt"
        embed_dim: 64
        monitor: "val/rec_loss"
        ddconfig:
          double_z: True
          z_channels: 64
          resolution: 256
          in_channels: 1         # Must match your AE
          out_ch: 1            # Must match your AE
          ch: 128
          ch_mult: [ 1,1,2,2,4,4 ]
          num_res_blocks: 2
          attn_resolutions: [ 16,8 ]
          dropout: 0.0
        lossconfig:
          target: ldm.modules.losses.LPIPSWithDiscriminator
          params:
            disc_start: 50001
            kl_weight: 0.000001
            disc_weight: 0.5
            disc_in_channels: 1  # Must match your AE
          

    cond_stage_config: "__is_unconditional__"

data:
  target: main.DataModuleFromConfig
  params:
    batch_size: 8 # Adjust as needed
    num_workers: 8
    train:
      target: ldm.data.ChestXRay.ChestXrayDataset
      params:
        root_dir: "../datasets/cleaned"
        task: "TB"
        split: "train"
        img_size: 256
    validation:
      target: ldm.data.ChestXRay.ChestXrayDataset
      params:
        root_dir: "../datasets/cleaned"
        task: "TB"
        split: "val"
        img_size: 256

lightning:
  callbacks:
    image_logger:
      target: main.ImageLogger
      params:
        batch_frequency: 10
        max_images: 8
        increase_log_steps: False


  trainer:
    benchmark: True